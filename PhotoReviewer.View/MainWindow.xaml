<view1:BaseWindow x:Class="PhotoReviewer.View.MainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:view="clr-namespace:PhotoReviewer.View"
                xmlns:viewModel="clr-namespace:PhotoReviewer.ViewModel;assembly=PhotoReviewer.ViewModel"
                xmlns:converters="clr-namespace:Scar.Common.WPF.Converters;assembly=Scar.Common.WPF.Converters"
                xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                xmlns:controls="clr-namespace:Scar.Common.WPF.Controls;assembly=Scar.Common.WPF.Controls"
                xmlns:system="clr-namespace:System;assembly=mscorlib"
                xmlns:view1="clr-namespace:Scar.Common.WPF.View;assembly=Scar.Common.WPF.View"
                xmlns:wpf="clr-namespace:Scar.Common.WPF;assembly=Scar.Common.WPF"
                Title="Photo Reviewer"
                Icon="pack://application:,,/PhotoReviewer.Resources;component/Images/Icon.ico"
                MinWidth="800"
                MinHeight="200"
                SizeToContent="Manual"
                WindowState="Maximized"
                mc:Ignorable="d"
                d:DataContext="{d:DesignInstance viewModel:MainViewModel}"
                FocusManager.FocusedElement="{Binding ElementName=PhotosListBox}">
    <!-- Styles and Templates -->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <view1:BaseWindow.Resources>
        <system:Double x:Key="ImageSize">25</system:Double>
        <Style TargetType="controls:ImageButton">
            <Setter Property="Width" Value="{StaticResource ImageSize}" />
            <Setter Property="Height" Value="{StaticResource ImageSize}" />
        </Style>
        <converters:PercentageIntToDoubleConverter x:Key="PercentageIntToDoubleConverter" />
        <converters:NullToBooleanConverter x:Key="NullToBooleanConverter" />
        <!-- Photo Template -->
        <DataTemplate DataType="{x:Type viewModel:Photo}">
            <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Margin="6">
                <Grid.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick"
                                  Command="{Binding DataContext.OpenPhotoCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                </Grid.InputBindings>
                <!-- Drop Shadow -->
                <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="4"
                        Background="#44000000">
                    <Border.RenderTransform>
                        <TranslateTransform X="5" Y="5" />
                    </Border.RenderTransform>
                    <Border.Effect>
                        <BlurEffect Radius="8" />
                    </Border.Effect>
                </Border>
                <!-- Image Template -->
                <Border Padding="4" BorderBrush="#22000000" BorderThickness="1">
                    <Border.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MarkedForDeletion}" Value="True">
                                    <Setter Property="Border.Background" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Favorited}" Value="True">
                                    <Setter Property="Border.Background" Value="LimeGreen" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Style.Setters>
                                <Setter Property="Border.Background" Value="White" />
                            </Style.Setters>
                        </Style>
                    </Border.Style>
                    <StackPanel Orientation="Vertical">
                        <Label Content="{Binding Name}" />
                        <Image Source="{Binding Thumbnail}" />
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>

        <!-- Main photo catalog view -->
        <Style TargetType="{x:Type ListBox}" x:Key="PhotoListBoxStyle">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <WrapPanel Margin="5" IsItemsHost="True" Orientation="Horizontal"
                                   ItemHeight="{Binding ElementName=ZoomSlider, Path='Value'}"
                                   ItemWidth="{Binding ElementName=ZoomSlider, Path='Value'}"
                                   VerticalAlignment="Top" HorizontalAlignment="Stretch" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for an individual generic item -->
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border SnapsToDevicePixels="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#445B6249" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Removes dotted rectangle focus -->
        <Style TargetType="{x:Type ItemsControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <WrapPanel IsItemsHost="True" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </view1:BaseWindow.Resources>

    <view1:BaseWindow.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding ProgressState}"
                         ProgressValue="{Binding Progress, Converter={StaticResource PercentageIntToDoubleConverter}}" />
    </view1:BaseWindow.TaskbarItemInfo>

    <!-- Master Container -->
    <Grid
        Margin="10">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="250" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Photo Management Canvas -->
        <DockPanel Grid.Column="0" Grid.Row="0" Margin="0,0,0,10">
            <Button DockPanel.Dock="Right" Width="80" Command="{Binding BrowseDirectoryCommand}" Content="Browse..." />
            <Label DockPanel.Dock="Left" Margin="0,0,10,0">Path:</Label>
            <TextBox Text="{Binding CurrentPath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,0"
                     VerticalAlignment="Center">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding ChangeDirectoryPathCommand}"
                                CommandParameter="{Binding Text, RelativeSource={RelativeSource AncestorType=TextBox}}"
                                Key="Enter" />
                </TextBox.InputBindings>
            </TextBox>
        </DockPanel>

        <GroupBox Grid.Column="0" Grid.Row="1">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <ListBox Name="PhotosListBox"
                         IsSynchronizedWithCurrentItem="True"
                         Style="{StaticResource PhotoListBoxStyle}"
                         Margin="5"
                         SelectionMode="Extended"
                         ItemsSource="{Binding PhotoCollection.FilteredView}"
                         SelectedItem="{Binding SelectedPhoto, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <i:Interaction.Behaviors>
                        <wpf:ScrollIntoViewBehavior />
                    </i:Interaction.Behaviors>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction
                                Command="{Binding SelectionChangedCommand}"
                                CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.InputBindings>
                        <KeyBinding Key="R" Modifiers="Control" Command="{Binding RenameToDateCommand}" />
                        <KeyBinding Key="F" Command="{Binding FavoriteCommand}" />
                        <KeyBinding Key="Back" Command="{Binding MarkForDeletionCommand}" />
                        <KeyBinding Key="Delete" Command="{Binding MarkForDeletionCommand}" />
                        <KeyBinding Key="Enter" Command="{Binding OpenPhotoCommand}" />
                    </ListBox.InputBindings>
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="View (Double click|Enter)" Command="{Binding OpenPhotoCommand}" />
                            <MenuItem Header="Favorite (F)" Command="{Binding FavoriteCommand}" />
                            <MenuItem Header="Mark as deleted (Delete|Backspace)"
                                      Command="{Binding MarkForDeletionCommand}" />
                            <MenuItem Header="Rename to date (Ctrl+R)" Command="{Binding RenameToDateCommand}" />
                            <MenuItem Header="Open in Explorer" Command="{Binding OpenPhotoInExplorerCommand}" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>
            </ScrollViewer>
        </GroupBox>

        <!-- Total -->
        <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
            <Label>Total:</Label>
            <Label Content="{Binding Path=PhotoCollection.Count}" />
            <Label>Selected:</Label>
            <Label Content="{Binding Path=SelectedCount}" />
            <Label>Marked for deletion:</Label>
            <Label Content="{Binding Path=PhotoCollection.MarkedForDeletionCount}" />
            <Label>Favorited:</Label>
            <Label Content="{Binding Path=PhotoCollection.FavoritedCount}" />
        </StackPanel>

        <!-- Splitter -->
        <GridSplitter Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="15"
                      Background="Transparent" ShowsPreview="True" />

        <!-- Right Hand Panel -->
        <DockPanel Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"
                   Margin="15,0,0,0">

            <!-- Copy Favorited Button -->
            <DockPanel DockPanel.Dock="Bottom" Margin="5">
                <Button Content="{Binding Path=PhotoCollection.FavoritedCount}"
                        ContentStringFormat="Copy favorited (0)" Command="{Binding CopyFavoritedCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ProgressState}" Value="Normal">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PhotoCollection.FavoritedCount}" Value="0">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DockPanel>

            <!-- Delete Button -->
            <DockPanel DockPanel.Dock="Bottom" Margin="5">
                <Button Content="{Binding Path=PhotoCollection.MarkedForDeletionCount}"
                        ContentStringFormat="Delete marked (0)" Command="{Binding DeleteMarkedCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ProgressState}" Value="Normal">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PhotoCollection.MarkedForDeletionCount}" Value="0">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DockPanel>

            <!-- Open in Explorer Button -->
            <DockPanel DockPanel.Dock="Bottom" Margin="5">
                <Button Content="Open folder in Explorer" Command="{Binding OpenDirectoryInExplorerCommand}"
                        IsEnabled="{Binding CurrentPath, Converter={StaticResource NullToBooleanConverter}}" />
            </DockPanel>

            <!-- Zoom Control -->
            <DockPanel DockPanel.Dock="Bottom" Margin="5">
                <Label DockPanel.Dock="Left">Zoom:</Label>
                <Slider Name="ZoomSlider"
                        Margin="10,0,0,0"
                        Orientation="Horizontal"
                        Minimum="80"
                        Maximum="320"
                        Value="160"
                        TickFrequency="80"
                        TickPlacement="BottomRight"
                        SmallChange="5"
                        LargeChange="20" />
            </DockPanel>

            <!-- Visibility CheckBox -->
            <DockPanel DockPanel.Dock="Bottom" Margin="5">
                <CheckBox VerticalAlignment="Center" Command="{Binding ShowOnlyMarkedChangedCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}">
                    Show only marked
                </CheckBox>
                <!-- Image Buttons -->
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                    <controls:ImageButton
                        ToolTip="Show Logs"
                        Source="pack://application:,,/PhotoReviewer.Resources;component/Images/document-32.png"
                        Command="{Binding ViewLogsCommand}" />
                    <controls:ImageButton
                        ToolTip="Open settings directory"
                        Source="pack://application:,,/PhotoReviewer.Resources;component/Images/settings-32.png"
                        Command="{Binding OpenSettingsFolderCommand}" />
                </StackPanel>
            </DockPanel>

            <!-- Progress Bar -->
            <DockPanel Opacity="0" DockPanel.Dock="Bottom" Margin="5">
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProgressState}" Value="Normal">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetProperty="Opacity">
                                            <DoubleAnimation From="0" To="1" Duration="0:0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetProperty="Opacity">
                                            <DoubleAnimation Duration="0:0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
                <ProgressBar Minimum="0" Maximum="100" Height="20" Value="{Binding Progress}" />
            </DockPanel>

            <!-- Metadata Panel -->
            <view:Metadata DataContext="{Binding PhotoCollection.FilteredView}" />
        </DockPanel>
    </Grid>
</view1:BaseWindow>